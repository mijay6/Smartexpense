// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// user model definition
model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String      
  firstName String   @map("first_name")
  lastName  String   @map("last_name")
  country   String   @default("RO")
  currency  String   @default("EUR")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  expenses  Transaction[]
  categories Category[]

  @@map("users") 
}

// category model definition
model Category {
  id        Int      @id @default(autoincrement())
  userId    String   @map("user_id")
  name      String
  color     String   @default("#3B82F6")
  icon      String   @default("üìÅ")
  type      String   @default("expense") // expense, income, savings
  isDefault Boolean  @default(false) @map("is_default")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  expenses  Transaction[]
  
  @@unique([userId, name]) // to prevent duplicate category names for the same user
  @@index([userId])        // for faster queries by userId
  @@map("categories")
}

// transaction model definition
model Transaction {
  id          String   @id @default(uuid())
  userId      String   @map("user_id")
  categoryId  Int      @map("category_id")
  amount      Decimal  @db.Decimal(10,2)
  description String
  date        DateTime @default(now())
  notes       String?
  receiptUrl  String?  @map("receipt_url")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  category    Category  @relation(fields: [categoryId], references: [id])
  
  @@index([userId, date]) // for faster queries by userId and date
  @@index([categoryId])   // for faster queries by categoryId
  @@map("transactions")
}
